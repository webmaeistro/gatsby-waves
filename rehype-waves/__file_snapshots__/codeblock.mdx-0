/* @jsx mdx */
import { CodeWave } from "waves";

const makeShortcode = name => function MDXDefaultShortcode(props) {
  console.warn("Component " + name + " was not imported, exported, or provided by MDXProvider as global scope")
  return <div {...props}/>
};

const layoutProps = {
  
};
const MDXLayout = "wrapper"
export default function MDXContent({
  components,
  ...props
}) {
  return <MDXLayout {...layoutProps} {...props} components={components} mdxType="MDXLayout">

    <CodeWave parsedSteps={{
      "tokens": [["x3", ";"], ["x2", ";"], ["x", ";"]],
      "types": [["plain", "punctuation"], ["plain", "punctuation"], ["plain", "punctuation"]],
      "steps": [{
        "lines": [2],
        "focus": {
          "0": true
        },
        "focusCenter": 0.5,
        "focusCount": 1,
        "longestLineIndex": 0
      }, {
        "lines": [1],
        "focus": {
          "0": true
        },
        "focusCenter": 0.5,
        "focusCount": 1,
        "longestLineIndex": 0
      }, {
        "lines": [0],
        "focus": {
          "0": true
        },
        "focusCenter": 0.5,
        "focusCount": 1,
        "longestLineIndex": 0
      }],
      "maxLineCount": 1,
      "showNumbers": false
    }} mdxType="CodeWave">
      <div>
        <div>
          <p>{`Markdown`}</p>
          <pre><code parentName="pre" {...{
              "className": "language-js"
            }}>{`// nested
`}</code></pre>
        </div>
      </div>
      <div>
        <h1>Foo</h1>
        <x>
  <h1>
    <span />
  </h1>
        </x>
        <foo>
          <pre><code parentName="pre" {...{
              "className": "language-js"
            }}>{`// nested 2
`}</code></pre>
  </foo>
      </div>
      <div>
        <p>{`Bye`}</p>
      </div>
    </CodeWave>
    </MDXLayout>;
}

;
MDXContent.isMDXComponent = true;